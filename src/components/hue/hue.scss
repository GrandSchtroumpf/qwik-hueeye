@use './utils.scss' as hue;

@layer {
  :root {
    --font-family: system-ui,  sans-serif;
    --size-0: 4px;
    --size-1: 8px;
    --size-2: 16px;
    --size-3: 24px;
    --size-4: 32px;
    --border-radius: 8px;
    --border: none;

    --surface-0: oklch(var(--lum-0) var(--chroma) var(--hue));
    --surface-1: oklch(var(--lum-1) var(--chroma) var(--hue));
    --surface-2: oklch(var(--lum-2) var(--chroma) var(--hue));
    --surface-3: oklch(var(--lum-3) var(--chroma) var(--hue));
    --surface-4: oklch(var(--lum-4) var(--chroma) var(--hue));

    
    --ease-in: cubic-bezier(0.55, 0, 1, 0.45);
    --ease-out: cubic-bezier(0, 0.55, 0.45, 1);
    --ease-in-out: cubic-bezier(0.85, 0, 0.15, 1);
    --ease-back-in-out: cubic-bezier(0.68, -0.6, 0.32, 1.6);
    --ease-back-out: cubic-bezier(0.34, 1.56, 0.64, 1);
    @media (prefers-reduced-motion: reduce) {
      --ease-in: ease-in;
      --ease-out: ease-out;
      --ease-in-out: ease-in-out;
      --ease-back-in-out: ease-in-out;
      --ease-back-out: ease-out;
    }
  }

  .compact {
    --size-0: 2px;
    --size-1: 4px;
    --size-2: 8px;
    --size-3: 16px;
    --size-4: 24px;
  }
  
  
  :root, ::backdrop {
    color-scheme: dark light;
    --chroma: 0.01;

    --lum-0: 100%;
    --lum-1: 95%;
    --lum-2: 93%;
    --lum-3: 92%;
    --lum-4: 91%;
  
    --color-lightness: 65%;
    --color-chroma: 0.25;

    --on-color-lightness: 100%;
    --on-color-chroma: 0;

    --alpha-hover: 8%;
    --alpha-focus: 12%;
    --alpha-drag: 24%;

    @media (prefers-contrast: more) {
      --chroma: 0.02;
      --color-chroma: 0.3;
      --lum-0: 100%;
      --lum-1: 95%;
      --lum-2: 90%;
      --lum-3: 85%;
      --lum-4: 80%;
      --on-primary: #000;
      --on-secondary: #000;
      --on-tertiary: #000;
      --surface-0: #fff;
      --text: #000;

      --alpha-hover: 12%;
      --alpha-focus: 24%;
      --alpha-drag: 32%;
    }

    @media (prefers-color-scheme: dark) {
      --chroma: 0.02;
      --color-lightness: 80%;
      --color-chroma: 0.27;

      --lum-0: 12%;
      --lum-1: 17%;
      --lum-2: 22%;
      --lum-3: 26%;
      --lum-4: 28%;

      --alpha-hover: 12%;
      --alpha-focus: 24%;
      --alpha-drag: 32%;
  
      --on-color-lightness: 20%;
      --on-color-chroma: 0.15;
      @media (prefers-contrast: more) {
        --chroma: 0.01;
        --chroma-color: 0.2;
        --on-color-lightness: 0%;
        --lum-0: 0%;
        --lum-1: 20%;
        --lum-2: 25%;
        --lum-3: 30%;
        --lum-4: 35%;
        --text: #fff;
        --on-primary: #000;
        --on-secondary: #000;
        --on-tertiary: #000;
        --surface-0: #000;

        --alpha-hover: 24%;
        --alpha-focus: 32%;
        --alpha-drag: 40%;
      }
    }
  }
  
  
  ::backdrop, .theme, :root {
    --primary-hue: var(--hue);
    --secondary-hue: calc(var(--hue) + 90);
    --warn-hue: 30;
  
    --text: oklch(20% var(--chroma) var(--hue));
    --text-variant: oklch(40% var(--chroma) var(--hue));

    --background-dim: var(--surface-4);
    --background: var(--surface-2);
    --background-bright: var(--surface-0);
    --background-blur: none;
    
    --overlay: var(--surface-4);

    --overlay-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    
    --surface-higher: var(--surface-4);
    --surface-high: var(--surface-3);
    --surface: var(--surface-2);
    --surface-low: var(--surface-1);
    --surface-lower:  var(--surface-0);
  
    --disabled: oklch(50% 0 var(--hue));
    --outline: oklch(30% var(--chroma) var(--hue));
    --divider: oklch(50% var(--chroma) var(--hue));
  
    --outline: oklch(50% var(--chroma) var(--hue));
    --divider: oklch(30% var(--chroma) var(--hue));
    
    --background-image: linear-gradient(
      var(--gradient-direction),
      var(--gradient-start),
      var(--gradient-end)
    );
    --gradient-start: var(--surface-1);
    --gradient-end: var(--surface-3);
    @supports (background: linear-gradient(in oklab, black, white)) {
      --gradient-direction: 160deg in oklab;
    }
    @supports not (background: linear-gradient(in oklab, black, white)) {
      --gradient-direction: 160deg;
    }

    @media (prefers-color-scheme: dark) {
      --chroma: 0.02;
      --text: oklch(100% var(--chroma) var(--hue));
      --text-variant: oklch(85% var(--chroma) var(--hue));  
      --divider: oklch(70% var(--chroma) var(--hue));
    }
  }
  html {

  }
  .analog {
    --primary-hue: var(--hue);
    --secondary-hue: calc(var(--hue) - 45);
    --tertiary-hue: calc(var(--hue) + 45);
    @include hue.primary;
    @include hue.secondary;
  }
  .triad {
    --primary-hue: var(--hue);
    --secondary-hue: calc(var(--hue) - 120);
    --tertiary-hue: calc(var(--hue) + 120);
    @include hue.primary;
    @include hue.secondary;
  }
  .complementary {
    --primary-hue: calc(var(--hue) + 180);
    --secondary-hue: calc(var(--hue) - 30);
    --tertiary-hue: calc(var(--hue) + 30);
    @include hue.primary;
    @include hue.secondary;
  }
  
  /****************/
  /* Colors Utils */
  /****************/
  .blur-overlay {
    --overlay: oklch(var(--lum-2) var(--chroma) var(--hue) / 80%);
    --overlay-filter: blur(10px) saturate(150%);
  }
  .primary {
    --color: var(--primary);
    --on-color: var(--on-primary);
  }
  .secondary {
    --color: var(--secondary);
    --on-color: var(--on-secondary);
  }
  .warn {
    --color: var(--warn);
    --on-color: var(--on-warn);
  }
  .gradient {
    --on-gradient: var(--on-primary);
    --gradient-start: var(--primary);
    --gradient-end: var(--secondary);
    --background-image: linear-gradient(
      var(--gradient-direction),
      var(--gradient-start),
      var(--gradient-end)
    );
  }
  #svg-gradient {
    --gradient-start: var(--primary);
    --gradient-end: var(--secondary);
  }
  
  .flat {
    --border-radius: 0;
  }
  .round {
    --border-radius: 40px;
  }
  .outline {
    --border: 1px solid var(--color, var(--outline));
  }
  
  @keyframes scaleout {
    from {
      opacity: 1;
      transform: scale(1);
    }
    to {
      opacity: 0;
      transform: scale(1.1);
    }
  }
  @keyframes scalein {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  @keyframes scaledown {
    from {
      transform: scale(1);
    }
    to {
      transform: scale(0.9);
    }
  }
  @keyframes fadeout {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
  @keyframes slideup {
    from {
      opacity: 0;
      transform: translateY(var(--slide-from, 10px));
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fade {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  // Using opacity doesn't work
  @keyframes backdrop-fade {
    from {
      background-color: transparent;
    }
    to{
      background-color: var(--backdrop-color, black);
    }
  }
  
  html {
    @include hue.primary;
    @include hue.secondary;
    @include hue.warn;
    -webkit-tap-highlight-color: transparent;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--font-family);
    font-size: 1rem;
    color-scheme: dark light;
    accent-color: var(--primary);
    
    background-image: var(--background);
    color: var(--text);
  }
  
  body {
    margin: 0;
    line-height: inherit;
  }
  
  
  h1, h2, h3, h4, h5, h6, p {
    margin-block: 0;
  }
  
  fieldset {
    margin-inline: unset; // remove 2px margin-inline
  }
  
  button {
    font-size: 1rem;
    font-family: var(--font-family);
    cursor: pointer;
  }
  
  pre {
    font-family: inherit;
    white-space: break-spaces;
  }

  input, textarea {
    font-family: var(--font-family);
    font-size: 1rem;
  }
  
  
  //////////////
  /// BUTTON ///
  //////////////
  
  
  a[class*="he-btn"] {
    text-decoration: none;
    color: inherit;
  }

  
  .he-btn {
    display: flex;
    gap: var(--size-1);
    font-size: 0.9rem;
    border-radius: var(--he-radius, var(--size-1));
    box-sizing: border-box;
    border: none;
    padding: var(--size-1) var(--size-2);
    &.vertical {
      flex-direction: column;
    }
    &.flat {
      --he-radius: 0;
    }
    &.round {
      --he-radius: 20px;
    }
    // Use :disabled for buttons & .disabled for anchors
    &:disabled, &.disabled {
      opacity: 0.5;
      cursor: default;
      pointer-events: none;
    }
    svg {
      height: var(--icon-size, 24px);
      width: var(--icon-size, 24px);
      flex-shrink: 0;
    }
  }
  .he-btn:not(.gradient) {
    &:focus-visible {
      outline-style: solid;
      outline-width: 1.5px;
      outline-color: var(--color, var(--text));
    }
  }

  .he-btn:not(.fill, .outline, .icon) {
    color: var(--color, currentColor);
  }

  // transparent background
  .he-btn:not(.fill) {
    background-color: transparent;
    &:hover {
      // Use on-color with transparency to create a nice effect
      background-color: color-mix(
        in oklch,
        var(--color, currentColor) var(--alpha-hover),
        var(--on-color, transparent) var(--alpha-hover)
      );
    }
    &:active {
      background-color: color-mix(
        in oklch,
        var(--color, currentColor) var(--alpha-focus),
        var(--on-color, transparent) var(--alpha-focus)
      );
    }
    svg {
      fill: var(--color, currentColor);
    }
  }

  .he-btn.gradient:not(.fill, .outline) {
    font-weight: 500;
    background-image: linear-gradient(
      var(--gradient-direction),
      var(--gradient-start) 30%,
      var(--gradient-end) 80%
    );
    position: relative;
    isolation: isolate;
    -webkit-background-clip: text;  // webkit required for android
    background-clip: text;
    -webkit-text-fill-color: transparent;
    &::before {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      z-index: -1;
    }
    &:hover::before {
      background-color: var(--gradient-start, var(--surface));
      opacity: var(--alpha-hover);
    }
    &:active::before {
      background-color: var(--gradient-start, var(--surface));
      opacity: var(--alpha-focus);
    }
    svg {
      fill: url(#svg-gradient);
    }
  }

  
  .he-btn.outline {
    transition: background-color 0.1s ease-in-out;
    border: var(--border-width, 1px) solid var(--color, var(--outline));
    padding: 8px 16px;
    &:focus-visible {
      outline-offset: 2px;
    }
    &.gradient {
      --color: var(--background);
      background-image: var(--background-image);
      position: relative;
      isolation: isolate;
      border: none;
  
      &::before {
        content: "";
        position: absolute;
        inset: var(--border-width, 1px);
        background-color: var(--background);
        border-radius: inherit;
        z-index: -1;
      }
      &:hover::before {
        background-color: color-mix(in oklch, var(--text) var(--alpha-hover), var(--background));
      }
      &:active::before {
        background-color: color-mix(in oklch, var(--text) var(--alpha-focus), var(--background));
      }
    }
  }
  
  .he-btn.icon {
    aspect-ratio: 1 / 1;
    display: grid;
    place-items: center;
    border: none;
    line-height: 0;
    padding: 8px;
    &.gradient {
      svg {
        fill: url(#svg-gradient);
      }
    } 
  }
      
  .he-btn:not(.icon) {
    display: inline-flex;
    align-items: center;
    gap: var(--size-1);
    box-sizing: border-box;
  }
  
  .he-btn.expand {
    border: none;
    border-radius: var(--size-1);
    height: 48px;
    min-width: 48px;
    max-width: 48px;
    gap: 12px;
    padding: 12px;
    overflow: hidden;
    white-space: nowrap;
    transition: max-width 0.2s var(--ease-out);
    &[aria-expanded="true"] {
      transition: max-width 0.2s var(--ease-in);
      max-width: var(--btn-expand-width, 200px);
    }
    &.fill {
      background-color: var(--color, var(--background));
      color: var(--on-color, var(--text));
    }
    &.fill.gradient {
      background-image: var(--background-image);
      color: var(--on-gradient);
    }
    &.outline {
      background-color: transparent;
      color: var(--on-color, var(--text));
    }
    &.outline.gradient {
      background-image: var(--background-image);
      color: var(--text);
      isolation: isolate;
      position: relative;
      &::before {
        content: "";
        position: absolute;
        inset: var(--border-width, 1px);
        background-color: var(--background);
        border-radius: calc(var(--size-1) - var(--border-width, 1px));
        z-index: -1;
      }
      &:hover::before {
        background-color: color-mix(in oklch, var(--text) var(--alpha-hover), var(--background));
      }
      &:active::before {
        background-color: color-mix(in oklch, var(--text) var(--alpha-focus), var(--background));
      }
    }
  }

    
  .he-btn.fill {
    border: none;
    padding: 8px 16px;
    background-color: var(--color, var(--surface));
    color: var(--on-color, var(--text));
    &:hover {
      background-color: color-mix(
        in oklch,
        var(--on-color, var(--text)) var(--alpha-hover),
        var(--color, var(--surface))
      );
    }
    &:active {
      background-color: color-mix(
        in oklch,
        var(--on-color, var(--text)) var(--alpha-focus),
        var(--color, var(--surface))
      );
    }
    &.gradient {
      background-image: var(--background-image);
      color: var(--on-gradient);
      &:hover {
        background-image: linear-gradient(
          var(--gradient-direction),
          color-mix(in oklch, var(--on-gradient) var(--alpha-hover), var(--gradient-start)),
          color-mix(in oklch, var(--on-gradient) var(--alpha-hover), var(--gradient-end))
        );
      }
      &:active {
        background-image: linear-gradient(
          var(--gradient-direction),
          color-mix(in oklch, var(--on-gradient) var(--alpha-focus), var(--gradient-start)),
          color-mix(in oklch, var(--on-gradient) var(--alpha-focus), var(--gradient-end))
        );
      }
    }
    svg {
      fill: var(--on-color, currentColor);
    }
  }
}